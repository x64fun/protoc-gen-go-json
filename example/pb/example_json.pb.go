// Code generated by protoc-gen-go-json. DO NOT EDIT.
// versions:
// - protoc-gen-go-json v1.0.0
// - protoc             v3.6.1
// source: example.proto

package pb

import (
	json "encoding/json"
	fmt "fmt"
	tools "github.com/x64fun/protoc-gen-go-json/tools"
	strings "strings"
)

type HelloRequestJSON struct {
	Data   string           `json:"data"`
	Age    int64            `json:"Age"`
	Object tools.JSONObject `json:"object"`
}

func (x HelloRequest) MarshalJSON() ([]byte, error) {
	tmp := &HelloRequestJSON{}
	var err error
	_ = err
	tmp.Data = x.Data
	tmp.Age = x.Age
	tmp.Object, err = tools.Object(x.Object)
	if err != nil {
		return nil, err
	}
	return json.Marshal(tmp)
}
func (x *HelloRequest) UnmarshalJSON(b []byte) error {
	tmp := &HelloRequestJSON{}
	err := json.Unmarshal(b, tmp)
	if err != nil {
		return fmt.Errorf(strings.ReplaceAll(err.Error(), "HelloRequestJSON", "HelloRequest"))
	}
	x.Data = tmp.Data
	x.Age = tmp.Age
	x.Object, err = tools.GetBytes(tmp.Object)
	if err != nil {
		return err
	}
	return nil
}

type HelloResponseJSON struct {
	Reply string `json:"reply"`
}

func (x HelloResponse) MarshalJSON() ([]byte, error) {
	tmp := &HelloResponseJSON{}
	var err error
	_ = err
	tmp.Reply = x.Reply
	return json.Marshal(tmp)
}
func (x *HelloResponse) UnmarshalJSON(b []byte) error {
	tmp := &HelloResponseJSON{}
	err := json.Unmarshal(b, tmp)
	if err != nil {
		return fmt.Errorf(strings.ReplaceAll(err.Error(), "HelloResponseJSON", "HelloResponse"))
	}
	x.Reply = tmp.Reply
	return nil
}
